name: Deploy Medisinsk vilkår
on:
    workflow_call:
        secrets:
            READER_TOKEN:
                required: true
        inputs:
            environment:
                required: true
                type: string
env:
    IMAGE_BASE: ghcr.io/${{ github.repository }}/medisinsk-vilkar-frontend
    package-name: medisinsk-vilkar-frontend

jobs:
    deploy-docker-image:
        name: Deploy Docker image
        runs-on: ubuntu-latest
        steps:
            - name: Hente kode
              uses: actions/checkout@v3
            - uses: pnpm/action-setup@v2
              with:
                  version: 7
            - name: Sette opp Node
              uses: actions/setup-node@v3
              with:
                  node-version: 16.x
                  registry-url: https://npm.pkg.github.com/
                  scope: '@navikt'
                  cache: 'pnpm'
                  always-auth: true
            - name: Installere dependencies
              run: pnpm install --prefer-offline --frozen-lockfile
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
            - name: Bygg k9-frontend-modules
              run: lerna run build --scope '{@navikt/k9-fe-array-utils,@navikt/k9-fe-bem-utils,@navikt/k9-fe-date-utils,@navikt/k9-fe-form-utils,@navikt/k9-fe-http-utils,@navikt/k9-fe-period-utils}'
            - name: Kjøre linter
              run: lerna run lint --scope ${{env.package-name}}
            - name: Valider typescript
              run: lerna run ts-check --scope ${{env.package-name}}
            - name: Kjøre enhetstester
              run: lerna run test --scope ${{env.package-name}}
            - name: Kjør E2E-tester
              uses: cypress-io/github-action@v5
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
              with:
                  install: false
                  project: ./packages/medisinsk-vilkår
                  start: lerna run dev --scope medisinsk-vilkar-frontend
                  wait-on: 'http://localhost:8081'
                  wait-on-timeout: 60
            - name: Laster opp screenshots dersom Cypress-testene feiler
              uses: actions/upload-artifact@v3
              if: failure()
              with:
                  name: cypress-screenshots
                  path: packages/**/cypress/screenshots
            - name: Kjøre bygg
              run: lerna run build --scope ${{env.package-name}}
            - name: Sette versjon
              working-directory: ./packages/medisinsk-vilkår
              run: |
                  echo "MAJOR_VERSION=$(npm run majorVersion --silent)" >> $GITHUB_ENV
            - name: Sette tag
              run: |
                  echo "TAG=$(date "+%Y.%m.%d-%m")-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            - name: Sette miljøvariabler
              working-directory: ./packages/medisinsk-vilkår
              run: |
                  echo "IMAGE=${IMAGE_BASE}:${TAG}" >> $GITHUB_ENV
                  echo "LATEST=${IMAGE_BASE}:latest" >> $GITHUB_ENV
                  echo "CSS_HASH=$(shasum -b -a 384 build/${MAJOR_VERSION}/styles.css | awk '{ print $1 }' | xxd -r -p | base64)" >> $GITHUB_ENV
                  echo "JS_HASH=$(shasum -b -a 384 build/${MAJOR_VERSION}/app.js | awk '{ print $1 }' | xxd -r -p | base64)" >> $GITHUB_ENV
            - uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Bygg og laste opp docker-image
              working-directory: ./packages/medisinsk-vilkår
              run: |
                  docker build --tag ${IMAGE} --tag ${LATEST} .
                  docker push ${IMAGE}
                  docker push ${LATEST}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Deploy til dev-fss
              uses: nais/deploy/actions/deploy@v1
              if: github.event.inputs.environment == 'Q1'
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-fss
                  RESOURCE: ./packages/medisinsk-vilkår/nais/naiserator.yml
                  VARS: ./packages/medisinsk-vilkår/nais/dev-fss.json
            - name: Deploy til prod-fss
              if: github.ref == 'refs/heads/main' && github.event.inputs.environment == 'Prod'
              uses: nais/deploy/actions/deploy@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: prod-fss
                  RESOURCE: ./packages/medisinsk-vilkår/nais/naiserator.yml
                  VARS: ./packages/medisinsk-vilkår/nais/prod-fss.json
            - name: Create Release
              id: create_release
              if: github.ref == 'refs/heads/main' && github.event.inputs.environment == 'Prod'
              uses: actions/create-release@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ env.TAG }}
                  release_name: ${{ env.TAG }}
                  body: |
                      For JS, add this to your app:
                      ```
                      <script
                        type="text/javascript"
                        src="https://medisinsk-vilkar-frontend.dev.adeo.no/${{ env.MAJOR_VERSION }}/app.js"
                        integrity="sha384-${{ env.JS_HASH }}"
                        crossorigin="anonymous"
                      ></script>
                      ```

                      For CSS, add this to the `<head>` of your app:
                      ```
                      <link
                        rel="stylesheet"
                        href="https://medisinsk-vilkar-frontend.dev.adeo.no/${{ env.MAJOR_VERSION }}/styles.css"
                        integrity="sha384-${{ env.CSS_HASH }}"
                        crossorigin="anonymous"
                      >
                      ```
                  draft: false
                  prerelease: false
