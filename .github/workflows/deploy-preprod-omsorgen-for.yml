name: Deploy preprod Omsorgen for
on: [workflow_dispatch]
env:
    IMAGE_BASE: ghcr.io/${{ github.repository }}/omsorgen-for-frontend
    package-name: omsorgen-for-frontend

jobs:
    deploy-docker-image:
        name: Deploy Docker image
        runs-on: ubuntu-latest
        steps:
            - name: Hente kode
              uses: actions/checkout@v3
            - name: Sette opp Node
              uses: actions/setup-node@v3
              with:
                  node-version: 16.x
                  registry-url: https://npm.pkg.github.com/
                  scope: '@navikt'
                  cache: 'yarn'
                  always-auth: true
            - name: Installere dependencies
              run: yarn install --prefer-offline --frozen-lockfile
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
            - name: Bygg k9-frontend-modules
              run: lerna run build --scope '{@navikt/k9-array-utils,@navikt/k9-bem-utils,@navikt/k9-date-utils,@navikt/k9-form-utils,@navikt/k9-http-utils,@navikt/k9-period-utils}'
            - name: Kjøre linter
              run: lerna run lint --scope ${{env.package-name}}
            - name: Valider typescript
              run: lerna run ts-check --scope ${{env.package-name}}
            - name: Kjøre enhetstester
              run: lerna run test --scope ${{env.package-name}}
            - name: Kjøre bygg
              run: lerna run build --scope ${{env.package-name}}
            - name: Sette versjon
              working-directory: ./packages/omsorgen-for
              run: |
                  echo "MAJOR_VERSION=$(npm run majorVersion --silent)" >> $GITHUB_ENV
            - name: Sette tag
              run: |
                  echo "TAG=$(date "+%Y.%m.%d-%m")-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            - name: Sette miljøvariabler
              working-directory: ./packages/omsorgen-for
              run: |
                  echo "IMAGE=${IMAGE_BASE}:${TAG}" >> $GITHUB_ENV
                  echo "LATEST=${IMAGE_BASE}:latest" >> $GITHUB_ENV
                  echo "CSS_HASH=$(shasum -b -a 384 build/${MAJOR_VERSION}/styles.css | awk '{ print $1 }' | xxd -r -p | base64)" >> $GITHUB_ENV
                  echo "JS_HASH=$(shasum -b -a 384 build/${MAJOR_VERSION}/app.js | awk '{ print $1 }' | xxd -r -p | base64)" >> $GITHUB_ENV
            - uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Bygg og laste opp docker-image
              working-directory: ./packages/omsorgen-for
              run: |
                  docker build --tag ${IMAGE} --tag ${LATEST} .
                  docker push ${IMAGE}
                  docker push ${LATEST}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Deploy til dev-fss
              uses: nais/deploy/actions/deploy@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-fss
                  RESOURCE: ./packages/omsorgen-for/nais/naiserator.yml
                  VARS: ./packages/omsorgen-for/nais/dev-fss.json
